[versions]
agpVersion = "7.0.1"
kotlinVersion = "1.5.21"
coroutinesVersion = "1.5.1"
googleServicesVersion = "4.3.5"
daggerVersion = "2.38.1"
gsonVersion = "2.8.6"
firebaseBomVersion = "26.4.0"
crashlyticsVersion = "2.4.1"
appCompatVersion = "1.3.0"
coreKtxVersion = "1.3.2"
fragmentKtxVersion = "1.3.4"
roomVersion = "2.2.6"
preferenceVersion = "1.1.1"
archCoreVersion = "2.1.0"
timberVersion = "4.7.1"
networkAdapterVersion = "4.1.0"
leakCanaryVersion = "2.6"
okhttpVersion = "4.7.2"
retrofitVersion = "2.7.0"
coilComposeVersion = "1.3.2"
accompanistVersion = "0.17.0"
activityVersion = "1.3.1"
lifecycleVersion = "2.3.1"
composeVersion = "1.0.1"
composeNavigationVersion = "2.4.0-alpha07"
composeLifecycleVersion = "1.0.0-alpha07"

#test
testRunnerVersion = "1.3.0"
testCoreVersion = "1.3.0"
espressoVersion = "3.3.0"
extJunitVersion = "1.1.2"
mockitoKotlinVersion = "2.2.0"
mockitoInlineVersion = "3.1.0"
assertJVersion = "3.19.0"
jUnitVersion = "4.13.1"
burstVersion = "1.2.0"

[libraries]
agp = { module = "com.android.tools.build :gradle", version.ref = "agpVersion" }
kotlin-gradle = { module = "org.jetbrains.kotlin :kotlin-gradle-plugin", version.ref = "kotlinVersion" }
kotlin-stdlib = { module = "org.jetbrains.kotlin :kotlin-stdlib-jdk8", version.ref = "kotlinVersion" }
coroutines-core = { module = "org.jetbrains.kotlinx :kotlinx-coroutines-core", version.ref = "coroutinesVersion" }
coroutines-test = { module = "org.jetbrains.kotlinx :kotlinx-coroutines-test", version.ref = "coroutinesVersion" }
google-gms = { module = "com.google.gms :google-services", version.ref = "googleServicesVersion" }
hilt-android = { module = "com.google.dagger :hilt-android", version.ref = "daggerVersion" }
hilt-compiler = { module = "com.google.dagger :hilt-android-compiler", version.ref = "daggerVersion" }
hilt-gradle = { module = "com.google.dagger :hilt-android-gradle-plugin", version.ref = "daggerVersion" }
gson = { module = "com.google.code.gson :gson", version.ref = "gsonVersion" }
firebase-bom = { module = "com.google.firebase :firebase-bom", version.ref = "firebaseBomVersion" }
firebase-crashlytics = { module = "com.google.firebase :firebase-crashlytics-gradle", version.ref = "crashlyticsVersion" }
androidx-appcompat = { module = "androidx.appcompat :appcompat", version.ref = "appCompatVersion" }
androidx-core-ktx = { module = "androidx.core :core-ktx", version.ref = "coreKtxVersion" }
androidx-fragment-ktx = { module = "androidx.fragment :fragment-ktx", version.ref = "fragmentKtxVersion" }
androidx-room-runtime = { module = "androidx.room :room-runtime", version.ref = "roomVersion" }
androidx-room-compiler = { module = "androidx.room :room-compiler", version.ref = "roomVersion" }
androidx-room-ktx = { module = "androidx.room :room-ktx", version.ref = "roomVersion" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle :lifecycle-viewmodel-ktx", version.ref = "lifecycleVersion" }
androidx-lifecycle-ext = { module = "androidx.lifecycle :lifecycle-extensions", version.ref = "lifecycleVersion" }
androidx-preference-ktx = { module = "androidx.preference :preference-ktx", version.ref = "preferenceVersion" }
androidx-test-core = { module = "androidx.test :core", version.ref = "testCoreVersion" }
androidx-test-runner = { module = "androidx.test :runner", version.ref = "testRunnerVersion" }
androidx-test-espresso = { module = "androidx.test.espresso :espresso-core", version.ref = "espressoVersion" }
androidx-test-junit = { module = "androidx.test.ext :junit", version.ref = "extJunitVersion" }
androidx-arch-core-testing = { module = "androidx.arch.core :core-testing", version.ref = "archCoreVersion" }
timber = { module = "com.jakewharton.timber :timber", version.ref = "timberVersion" }
mockito-kotlin = { module = "com.nhaarman.mockitokotlin2 :mockito-kotlin", version.ref = "mockitoKotlinVersion" }
mockito-inline = { module = "org.mockito :mockito-inline", version.ref = "mockitoInlineVersion" }
assertj = { module = "org.assertj :assertj-core", version.ref = "assertJVersion" }
junit = { module = "junit :junit", version.ref = "jUnitVersion" }
network-adapter = { module = "com.github.haroldadmin :NetworkResponseAdapter", version.ref = "networkAdapterVersion" }
burst = { module = "com.squareup.burst :burst-junit4", version.ref = "burstVersion" }
okhttp-core = { module = "com.squareup.okhttp3 :okhttp", version.ref = "okhttpVersion" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3 :logging-interceptor", version.ref = "okhttpVersion" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3 :mockwebserver", version.ref = "okhttpVersion" }
leakcanary = { module = "com.squareup.leakcanary :leakcanary-android", version.ref = "leakCanaryVersion" }
retrofit-core = { module = "com.squareup.retrofit2 :retrofit", version.ref = "retrofitVersion" }
retrofit-ext-gson = { module = "com.squareup.retrofit2 :converter-gson", version.ref = "retrofitVersion" }
compose-runtime = { module = "androidx.compose.runtime :runtime", version.ref = "composeVersion" }
compose-foundation = { module = "androidx.compose.foundation :foundation", version.ref = "composeVersion" }
compose-ui = { module = "androidx.compose.ui :ui", version.ref = "composeVersion" }
compose-ui-tooling = { module = "androidx.compose.ui :ui-tooling", version.ref = "composeVersion" }
compose-ui-material = { module = "androidx.compose.material :material", version.ref = "composeVersion" }
compose-ui-imageloading = { module = "io.coil-kt :coil-compose", version.ref = "coilComposeVersion" }
compose-navigation = { module = "androidx.navigation :navigation-compose", version.ref = "composeNavigationVersion" }
compose-viewmodel = { module = "androidx.lifecycle :lifecycle-viewmodel-compose", version.ref = "composeLifecycleVersion" }
compose-ui-insets = { module = "com.google.accompanist :accompanist-insets", version.ref = "accompanistVersion" }
androidx-activity = { module = "androidx.activity :activity-ktx", version.ref = "activityVersion" }
compose-ui-activity = { module = "androidx.activity :activity-compose", version.ref = "activityVersion" }

[bundles]
compose = [ "compose-runtime", "compose-foundation" ]
compose-ui = [ "compose-ui", "compose-ui-tooling" ]